{
    "version": "https://jsonfeed.org/version/1",
    "title": "weiView",
    "description": "",
    "home_page_url": "https://blog.zhangv.com",
    "feed_url": "https://blog.zhangv.com/feed.json",
    "user_comment": "",
    "author": {
        "name": "zhangv"
    },
    "items": [
        {
            "id": "https://blog.zhangv.com/publiizhong-yu-ke-yi-zheng-chang-gong-zuo-liao.html",
            "url": "https://blog.zhangv.com/publiizhong-yu-ke-yi-zheng-chang-gong-zuo-liao.html",
            "title": "Publii终于可以正常工作了",
            "summary": "Finally.",
            "content_html": "<p>Finally.</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
            ],
            "date_published": "2023-12-17T10:31:26+08:00",
            "date_modified": "2023-12-17T10:31:26+08:00"
        },
        {
            "id": "https://blog.zhangv.com/publiiwu-fa-sync.html",
            "url": "https://blog.zhangv.com/publiiwu-fa-sync.html",
            "title": "Publii无法sync",
            "author": {
                "name": "zhangv"
            },
            "tags": [
            ],
            "date_published": "2023-11-01T23:53:18+08:00",
            "date_modified": "2023-11-01T23:53:18+08:00"
        },
        {
            "id": "https://blog.zhangv.com/bian-lun-he-pua.html",
            "url": "https://blog.zhangv.com/bian-lun-he-pua.html",
            "title": "辩论和PUA",
            "summary": "某日和一个朋友两口子吃饭，说起了关于“追问”，被对方指出这是一种PUA行为。实在是有点无法接受，于是乎，搬出了苏格拉底，甚至自己比较深的价值观都搬了出来。但似乎，对方并不为所动。 我发现辩论的目的并非让对方“心悦诚服”你，而是让其他观众接受你的观点。包括所谓的辩论赛，最终决定胜负的，也是把你的观点通过逻辑、实例、经验、共情等技巧“搬运并建造”在观众和评委的脑袋里。 另一个发现是，在现今大陆的普通大众脑袋里，根本不存在思辨这种东西的甚至萌芽。很多时候都是本能般地排斥自己陌生的观点。这里就包括将“追问”这一思辨工具简单化的归纳为PUA。为什么会有这种现象？总结一下： 1. 大多数体制内的工作人员都有一定的先入为主的观念，认为自己具备智商和认知优越，而且似乎越是官阶往上，这种认知越是笃定； 2. 大脑常年保持封闭状态，新的认知和方法获取地太少，久之，造成思维的固化。比较明显的现象是对大多数行为和事情都简单地“贴标签”。 我也第一次见识到“追问”原来是这么不受待见的行为，居然会上升到PUA和操控的地步。怪不得苏格拉底老头子硬是因此被判死刑。但是几千年过去了，现在的民众和那时的雅典民众好像没有什么区别。",
            "content_html": "<p>某日和一个朋友两口子吃饭，说起了关于“追问”，被对方指出这是一种PUA行为。实在是有点无法接受，于是乎，搬出了苏格拉底，甚至自己比较深的价值观都搬了出来。但似乎，对方并不为所动。</p>\n<p>我发现辩论的目的并非让对方“心悦诚服”你，而是让其他观众接受你的观点。包括所谓的辩论赛，最终决定胜负的，也是把你的观点通过逻辑、实例、经验、共情等技巧“搬运并建造”在观众和评委的脑袋里。</p>\n<p>另一个发现是，在现今大陆的普通大众脑袋里，根本不存在思辨这种东西的甚至萌芽。很多时候都是本能般地排斥自己陌生的观点。这里就包括将“追问”这一思辨工具简单化的归纳为PUA。为什么会有这种现象？总结一下：</p>\n<p>1. 大多数体制内的工作人员都有一定的先入为主的观念，认为自己具备智商和认知优越，而且似乎越是官阶往上，这种认知越是笃定；</p>\n<p>2. 大脑常年保持封闭状态，新的认知和方法获取地太少，久之，造成思维的固化。比较明显的现象是对大多数行为和事情都简单地“贴标签”。</p>\n<p>我也第一次见识到“追问”原来是这么不受待见的行为，居然会上升到PUA和操控的地步。怪不得苏格拉底老头子硬是因此被判死刑。但是几千年过去了，现在的民众和那时的雅典民众好像没有什么区别。</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "哲学"
            ],
            "date_published": "2023-11-01T15:03:19+08:00",
            "date_modified": "2023-11-01T15:03:19+08:00"
        },
        {
            "id": "https://blog.zhangv.com/zhan-zheng-shi-ai.html",
            "url": "https://blog.zhangv.com/zhan-zheng-shi-ai.html",
            "title": "战争是癌",
            "summary": "今天读到刘瑜的《可能性的艺术》，可能仅仅是因为前某页的某一小段，导致了这本书在国内被禁止出版。 帝国主义的目的是“扩张”，无论是居于某个局部还是居于统治地位，都将会走上扩张之路，也就是国家间战争（仅指暴力战争）。以前年轻时候曾有过一个观点 -- 战争是人类历史的性。通过战争可以淘汰掉落后或者不合理的“组织”并能促进融合（虽然可能不一定是情愿的）。现在看来，其实这个观点还是有点危险的。 从“扩张”这个所谓的目的来看，战争更像是癌的症状，而真正的癌是帝国主义。但是，帝国主义又是哪里来的呢？写到这里时，我去google搜索了一下“帝国主义是从哪里来的？”，结果google的搜索结果全部是来自中国政府网、学习强国、中国政协、司法网等“主旋律”网站的不相关结果。似乎“帝国主义”这个词并非世界主流。 这么看来帝国主义（Imperialism）才是人性社会的一种顽疾，其来源是对权力的无限制的欲望。而这种主义进入到人脑里，就成了人性的癌。",
            "content_html": "<p>今天读到刘瑜的《可能性的艺术》，可能仅仅是因为前某页的某一小段，导致了这本书在国内被禁止出版。</p>\n<p>帝国主义的目的是“扩张”，无论是居于某个局部还是居于统治地位，都将会走上扩张之路，也就是国家间战争（仅指暴力战争）。以前年轻时候曾有过一个观点 -- 战争是人类历史的性。通过战争可以淘汰掉落后或者不合理的“组织”并能促进融合（虽然可能不一定是情愿的）。现在看来，其实这个观点还是有点危险的。</p>\n<p>从“扩张”这个所谓的目的来看，战争更像是癌的症状，而真正的癌是帝国主义。但是，帝国主义又是哪里来的呢？写到这里时，我去google搜索了一下“帝国主义是从哪里来的？”，结果google的搜索结果全部是来自中国政府网、学习强国、中国政协、司法网等“主旋律”网站的不相关结果。似乎“帝国主义”这个词并非世界主流。</p>\n<p>这么看来帝国主义（Imperialism）才是人性社会的一种顽疾，其来源是对权力的无限制的欲望。而这种主义进入到人脑里，就成了人性的癌。</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
            ],
            "date_published": "2023-10-17T10:49:46+08:00",
            "date_modified": "2023-10-17T11:42:40+08:00"
        },
        {
            "id": "https://blog.zhangv.com/beef.html",
            "url": "https://blog.zhangv.com/beef.html",
            "title": "BEEF",
            "summary": "最近看了一部10集的美剧BEEF，纯粹是因为黄阿丽去看的。等一下，去查查BEEF到底是什么的缩写（随着年龄的增长，似乎好奇心也衰减了，居然看完才会去查一个不认识的缩写），当然不是牛肉的意思了。这里应是“不满，结下梁子”的意思。中文译为“怒呛人生”，很信达雅。 剧中的主要人物一水的亚裔ABC，华裔、韩裔、日裔集齐了。而且老中青都有，还是非常具有代表性的，而且编导团队也好几个亚裔。 看完以后，似乎能够体会到亚裔族群，在美国社会里的一种困境远不是自己之前想象的那样。相对还是封闭的，尤其是还要应对上一代家族那种掌控感。我能想到的最主要的一个词是：自私。 这里的自私，指的是那种 - 以自己的感觉来帮助身边的人做决定的行为，通常还有点暗戳戳。",
            "content_html": "<p>最近看了一部10集的美剧BEEF，纯粹是因为黄阿丽去看的。等一下，去查查BEEF到底是什么的缩写（随着年龄的增长，似乎好奇心也衰减了，居然看完才会去查一个不认识的缩写），当然不是牛肉的意思了。这里应是“不满，结下梁子”的意思。中文译为“怒呛人生”，很信达雅。</p>\n<p>剧中的主要人物一水的亚裔ABC，华裔、韩裔、日裔集齐了。而且老中青都有，还是非常具有代表性的，而且编导团队也好几个亚裔。</p>\n<p>看完以后，似乎能够体会到亚裔族群，在美国社会里的一种困境远不是自己之前想象的那样。相对还是封闭的，尤其是还要应对上一代家族那种掌控感。我能想到的最主要的一个词是：自私。</p>\n<p>这里的自私，指的是那种 - 以自己的感觉来帮助身边的人做决定的行为，通常还有点暗戳戳。</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "思考"
            ],
            "date_published": "2023-05-29T19:10:47+08:00",
            "date_modified": "2023-05-29T19:10:47+08:00"
        },
        {
            "id": "https://blog.zhangv.com/bei-guan-shi-yi-zhong-qing-xule-guan-shi-yi-zhong-si-lu.html",
            "url": "https://blog.zhangv.com/bei-guan-shi-yi-zhong-qing-xule-guan-shi-yi-zhong-si-lu.html",
            "title": "悲观是一种情绪，乐观是一种思路",
            "summary": "在《茑屋经营哲学》即将看完时看到了这句话，源自法国哲学家艾伦（没有找到具体的出处，猜想应该是雷蒙·埃隆，《知识分子的鸦片》作者）。恨不得马上拿出手机记下来，后来索性打开电脑，写点什么。 一直以来都认为悲观是因为「看过去」，而乐观是因为「看未来」，更多的是从看待事情的结果来区分，比如过去的成功/美好，而当下的不成功/不美好，再到寄希望于未来的可能的成功/美好。 情绪和思路，是一个之前没有注意到的视角。但是却让我非常“费解”，尤其是后半句“乐观是一种思路”，对一个我这种语言有些洁癖的人来说，情绪和思路完全是两种东西，则么能在这里相提并论呢？难受。虽然分开来解释很容易理解，但放到一句话里就是特别别扭。考虑去找找原文的出处和原文仔细辨析一下。 情绪是不解决问题的，或者仅仅是对压力的一种释放或抵抗；而思路则是奔着解决问题而去的，或者说是行动。情绪最常见的表达方式或者动作是“说”。如果从这个角度理解，重新组织一下：悲观是只说不做，乐观是马上去做。 那么我们可以认定：一个只说不做的人就是一个悲观的人，或者一个悲观的人只说不做。",
            "content_html": "<p>在《茑屋经营哲学》即将看完时看到了这句话，源自法国哲学家艾伦（没有找到具体的出处，猜想应该是雷蒙·埃隆，《知识分子的鸦片》作者）。恨不得马上拿出手机记下来，后来索性打开电脑，写点什么。</p>\n<p>一直以来都认为悲观是因为「看过去」，而乐观是因为「看未来」，更多的是从看待事情的结果来区分，比如过去的成功/美好，而当下的不成功/不美好，再到寄希望于未来的可能的成功/美好。</p>\n<p>情绪和思路，是一个之前没有注意到的视角。但是却让我非常“费解”，尤其是后半句“乐观是一种思路”，对一个我这种语言有些洁癖的人来说，情绪和思路完全是两种东西，则么能在这里相提并论呢？难受。虽然分开来解释很容易理解，但放到一句话里就是特别别扭。考虑去找找原文的出处和原文仔细辨析一下。</p>\n<p>情绪是不解决问题的，或者仅仅是对压力的一种释放或抵抗；而思路则是奔着解决问题而去的，或者说是行动。情绪最常见的表达方式或者动作是“说”。如果从这个角度理解，重新组织一下：悲观是只说不做，乐观是马上去做。</p>\n<p>那么我们可以认定：一个只说不做的人就是一个悲观的人，或者一个悲观的人只说不做。</p>\n<p> </p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "读书",
                   "思考"
            ],
            "date_published": "2023-04-27T03:37:51+08:00",
            "date_modified": "2023-04-27T03:37:51+08:00"
        },
        {
            "id": "https://blog.zhangv.com/quasarli-xian-ji.html",
            "url": "https://blog.zhangv.com/quasarli-xian-ji.html",
            "title": "Quasar历险记",
            "summary": "最近有一个新项目，想尝试一下Quasar，据说是一个很好的hybrid框架，由于之前尝试过用cordova + vuejs 开发hybrid APP，并且体验还不错，恰好Quasar又是基于vuejs，且支持cordova。考虑了一下，就入坑了，没准顺便就升级vuejs3了。开始，还是很和谐的，非常快，Quasar的文档也很赞。 直到第二天，当我发现发布到testflight上的iOS版本打开是白屏，可是在开发模式下(quasar dev -m ios）时是很正常的呀？由于之前遇到过类似的问题： 1. vue-router的用了history模式，而不是hash模式 这个仔细排查，通过（quasar inspect）仔细查看生成的vite配置，非常确定vue-router相关的路径配置是正确的。 2. 发生了js报错 打开safari的开发调试工具，查看iOS中的报错，发现是被CORS掉了。很奇怪，之前用cordova时候没有遇到这个问题呀？ 于是看到，在vite构建时会生成js文件并注入到index.html中，其中对js的文件引用采用的方式是\" type=module crossorigin \"，而这就会触发CORS检查。官方文档是这么解释的。天真的我，试着写了一个vite插件去删除掉这两个属性，但是却会造成无法使用export关键字的问题。 也尝试了将build.target改为各种低于es2019的版本，都无效。 而由于在cordova中是文件系统，这里就会产生一个很无解的情况。 接下来，只能再尝试一下使用webpack而不是vite去构建（因为有之前的成功项目作为背书），但可能会面临一系列版本冲突，webpack生成的js确实和vite不一样，且引用方式也不同。但是还没有功夫研究区别在哪里，只能考虑是否要用webpack再试试。 2023-4-28更新 采用Quasar的webpack模式初始化项目是可以的。 又继续调查了一下，在config.xml中加入： &lt;preference name=\"scheme\" value=\"app\" /&gt; &lt;preference name=\"hostname\" value=\"localhost\" /&gt; 也是可以的。参考",
            "content_html": "<p>最近有一个新项目，想尝试一下Quasar，据说是一个很好的hybrid框架，由于之前尝试过用cordova + vuejs 开发hybrid APP，并且体验还不错，恰好Quasar又是基于vuejs，且支持cordova。考虑了一下，就入坑了，没准顺便就升级vuejs3了。开始，还是很和谐的，非常快，Quasar的文档也很赞。</p>\n<p>直到第二天，当我发现发布到testflight上的iOS版本打开是白屏，可是在开发模式下(quasar dev -m ios）时是很正常的呀？由于之前遇到过类似的问题：</p>\n<p>1. vue-router的用了history模式，而不是hash模式</p>\n<p>这个仔细排查，通过（quasar inspect）仔细查看生成的vite配置，非常确定vue-router相关的路径配置是正确的。</p>\n<p>2. 发生了js报错</p>\n<p>打开safari的开发调试工具，查看iOS中的报错，发现是被CORS掉了。很奇怪，之前用cordova时候没有遇到这个问题呀？</p>\n<p>于是看到，在vite构建时会生成js文件并注入到index.html中，其中对js的文件引用采用的方式是\" type=module crossorigin \"，而这就会触发CORS检查。官方文档是<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#applying_the_module_to_your_html\" target=\"_blank\" rel=\"noopener noreferrer\">这么解释</a>的。天真的我，试着写了一个vite插件去删除掉这两个属性，但是却会造成无法使用export关键字的问题。</p>\n<p>也尝试了将build.target改为各种低于es2019的版本，都无效。</p>\n<p>而由于在cordova中是文件系统，这里就会产生一个很无解的情况。</p>\n<p>接下来，只能再尝试一下使用webpack而不是vite去构建（因为有之前的成功项目作为背书），但可能会面临一系列版本冲突，webpack生成的js确实和vite不一样，且引用方式也不同。但是还没有功夫研究区别在哪里，只能考虑是否要用webpack再试试。</p>\n<p>2023-4-28更新<br>采用Quasar的webpack模式初始化项目是可以的。</p>\n<p>又继续调查了一下，在config.xml中加入：</p>\n<div>\n<div>&lt;preference name=\"scheme\" value=\"app\" /&gt;</div>\n<div>&lt;preference name=\"hostname\" value=\"localhost\" /&gt;</div>\n<div>也是可以的。<a href=\"https://www.mathew-paul.nz/posts/cordova-webview-schemes-and-protocols/\" target=\"_blank\" rel=\"noopener noreferrer\">参考</a></div>\n</div>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "技术",
                   "quasar",
                   "cordova"
            ],
            "date_published": "2023-03-22T11:00:53+08:00",
            "date_modified": "2023-04-28T13:43:31+08:00"
        },
        {
            "id": "https://blog.zhangv.com/wan-ning-ling-shui-you-ji.html",
            "url": "https://blog.zhangv.com/wan-ning-ling-shui-you-ji.html",
            "title": "万宁陵水游记",
            "summary": "疫情三年终于过去了，寒假也没几天了。刚上初一的儿子也没几天假期余额了，赶紧出去一趟，去万宁冲浪热热身。 我可以算是一个海南黑，反对亲人去海南买房置产就学养老旅游，虽然这次已经是第二次了，实在是有不得已的苦衷。确实不享受，一来国内的旅游目的地同质化太严重，多样化不足，品质参差不齐，而且性价比奇差，二来，貌似没有了。 万宁是奔着冲浪来的，主要就是日月湾，酒店里报了一个冲浪入门课，教练们还是比较认真负责的，基本上能比较有耐心地陪孩子边学边玩两个小时，也算是不打击孩子的兴趣，至于想要进一步进阶，如果没有实力（钱和时间），就不要考虑孩子的天赋什么的了。这也是我的一贯观点 -- 让孩子多尝试，留足可能性，尽可能让孩子自己决定和选择。 至于说作为旅行或度假目的地，去了日月湾、石梅湾、神舟半岛，光顾了若干网红书店、咖啡馆、打卡地，真是没什么意思，不如就是在海边发发呆，让孩子们在海里泡泡、堆堆沙子。至于美食，永远都是烤鱿鱼、臭豆腐、麻辣烫、小海鲜、东北烧烤。。。尤其是后海村，连杯好喝的啤酒都喝不到。 把护照办好，整理行装，还是出国吧。珍惜当下。",
            "content_html": "<p>疫情三年终于过去了，寒假也没几天了。刚上初一的儿子也没几天假期余额了，赶紧出去一趟，去万宁冲浪热热身。</p>\n<p>我可以算是一个海南黑，反对亲人去海南买房置产就学养老旅游，虽然这次已经是第二次了，实在是有不得已的苦衷。确实不享受，一来国内的旅游目的地同质化太严重，多样化不足，品质参差不齐，而且性价比奇差，二来，貌似没有了。</p>\n<p>万宁是奔着冲浪来的，主要就是日月湾，酒店里报了一个冲浪入门课，教练们还是比较认真负责的，基本上能比较有耐心地陪孩子边学边玩两个小时，也算是不打击孩子的兴趣，至于想要进一步进阶，如果没有实力（钱和时间），就不要考虑孩子的天赋什么的了。这也是我的一贯观点 -- 让孩子多尝试，留足可能性，尽可能让孩子自己决定和选择。</p>\n<p>至于说作为旅行或度假目的地，去了日月湾、石梅湾、神舟半岛，光顾了若干网红书店、咖啡馆、打卡地，真是没什么意思，不如就是在海边发发呆，让孩子们在海里泡泡、堆堆沙子。至于美食，永远都是烤鱿鱼、臭豆腐、麻辣烫、小海鲜、东北烧烤。。。尤其是后海村，连杯好喝的啤酒都喝不到。</p>\n<p>把护照办好，整理行装，还是出国吧。珍惜当下。</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "旅行"
            ],
            "date_published": "2023-02-08T00:33:53+08:00",
            "date_modified": "2023-02-08T00:33:53+08:00"
        },
        {
            "id": "https://blog.zhangv.com/guan-yu-material-designzhong-uide-pei-se-wen-ti.html",
            "url": "https://blog.zhangv.com/guan-yu-material-designzhong-uide-pei-se-wen-ti.html",
            "title": "关于Material Design中UI的配色问题",
            "summary": "最近几年用Vuetify比较多，Vuetify是基于Material Design的一套前端UI脚手架系统，整个MD的配色系统是比较科学的，它定义了五个核心颜色： 此外就是自定义的颜色了，主要是根据功能性来划分，在Vuetify中有：error、info、success、accent、warning，需要设计师根据核心色调整。 针对于易读性问题，要保证强调色(primary/secondary/tertiary)和基底色（neutral/neutral variant)有足够的对比度，可以部分的通过生成来解决。 对一个专注于功能开发的程序员来说，MD的这套配色系统至少提供了一套可复用的配色逻辑： （注：MD是基于孟塞尔颜色系统(Munsell color system)，主要是是基于： 1. hue - 色相/色调,颜色在色轮中的位置（一共360个位置） 2. saturation饱和度、也叫色彩强度（intensity）或色度（chroma）-越高越强烈，越低越暗淡 3.value色值，颜色的深浅，混入黑色让颜色变深（shade）、混入白色让颜色发白（tint）、混入灰色使颜色偏灰(tone) 以一个基本图片出发 先获取主色（primary），也就是图片中最多的颜色（获得HCT中的H - hue色相） 然后根据primary生成secondary和tertiary（如饱和度减弱） 然后根据primary生成neutral和neutral variant（增加/减少灰度） 其他自定义色： success - 通常选绿色或者暖色，根据主色增加饱和度 warning - 通常选桔黄色，可暖可冷，如主色的对比色 error - 通常选红色，根据注册调整饱和度和灰度 info - 选个人畜无害的颜色，我一般很少用 accent - error和warning中间的颜色，如果二者接近，可考虑neutral的对比色 总之，MD的配色系统还是考虑到很多的，如果稍微多了解一些颜色配色基础，即便不是设计师也能做出不那么难看（难看如微信）的UI了。 参考： Material Design Color System&hellip;",
            "content_html": "<p>最近几年用Vuetify比较多，Vuetify是基于Material Design的一套前端UI脚手架系统，整个MD的配色系统是比较科学的，它定义了五个核心颜色：</p>\n<ul>\n<li>primary - 主要元素的颜色（背景或者边框，如页面中的「确认支付」按钮）</li>\n<li>secondary - 次要元素颜色（同样是以背景或者边框，如页面中的后退、分享、过滤按钮）</li>\n<li>tertiary - 再次元素颜色（一般就比较少用了，除非是比较复杂的页面）</li>\n<li>neutral - 通常用来做背景或表面，也作为文本和图标的强调色</li>\n<li>neutral variant - 主要是用来作为中等强调的组件或者边缘和文字</li>\n</ul>\n<p>此外就是自定义的颜色了，主要是根据功能性来划分，在Vuetify中有：error、info、success、accent、warning，需要设计师根据核心色调整。</p>\n<p>针对于易读性问题，要保证强调色(primary/secondary/tertiary)和基底色（neutral/neutral variant)有足够的对比度，可以部分的通过生成来解决。</p>\n<p>对一个专注于功能开发的程序员来说，MD的这套配色系统至少提供了一套可复用的配色逻辑：</p>\n<pre>（注：MD是基于<a href=\"https://zh.m.wikipedia.org/zh-hk/%E5%AD%9F%E5%A1%9E%E5%B0%94%E9%A2%9C%E8%89%B2%E7%B3%BB%E7%BB%9F\" target=\"_blank\" rel=\"noopener noreferrer\">孟塞尔颜色系统</a>(Munsell color system)，主要是是基于：<br><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">1. hue - 色相/色调,颜色在色轮中的位置（一共360个位置）<br></span><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">2. saturation饱和度、也叫色彩强度（intensity）或色度（chroma）-越高越强烈，越低越暗淡<br></span>3.value色值，颜色的深浅，混入黑色让颜色变深（shade）、混入白色让颜色发白（tint）、混入灰色使颜色偏灰(tone)</pre>\n<ol>\n<li>以一个基本图片出发</li>\n<li>先获取主色（primary），也就是图片中最多的颜色（获得HCT中的H - hue色相）</li>\n<li>然后根据primary生成secondary和tertiary（如饱和度减弱）</li>\n<li>然后根据primary生成neutral和neutral variant（增加/减少灰度）</li>\n<li>其他自定义色：<br>success -  通常选绿色或者暖色，根据主色增加饱和度<br>warning - 通常选桔黄色，可暖可冷，如主色的对比色<br>error - 通常选红色，根据注册调整饱和度和灰度<br>info - 选个人畜无害的颜色，我一般很少用<br>accent - error和warning中间的颜色，如果二者接近，可考虑neutral的对比色</li>\n</ol>\n<p>总之，MD的配色系统还是考虑到很多的，如果稍微多了解一些颜色配色基础，即便不是设计师也能做出不那么难看（难看如微信）的UI了。</p>\n<p>参考：</p>\n<ol>\n<li><a href=\"https://m3.material.io/styles/color/overview\" target=\"_blank\" rel=\"noopener noreferrer\">Material Design Color System</a></li>\n<li><a href=\"https://m3.material.io/theme-builder#/dynamic\">Material Design Theme Builder（主题生成器）</a></li>\n<li><a href=\"https://www.woshipm.com/pd/4928465.html\">B端设计 | 设计师必须了解的色彩系统搭建</a></li>\n<li>《贝蒂的色彩》</li>\n</ol>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "设计",
                   "技术"
            ],
            "date_published": "2023-02-01T01:07:02+08:00",
            "date_modified": "2023-02-01T01:08:29+08:00"
        },
        {
            "id": "https://blog.zhangv.com/guan-yu-safe-area-inset-xde-chu-li-fang-shi-zong-jie.html",
            "url": "https://blog.zhangv.com/guan-yu-safe-area-inset-xde-chu-li-fang-shi-zong-jie.html",
            "title": "关于safe-area-inset-x的处理方式总结",
            "summary": "首先什么是safe-area-inset-*？直接翻译是：安全区域内嵌上/下/左/右，意思是网页显示内容需要内嵌的方向和长度。「caniuse和mdn介绍」。比较常见的是iPhoneX开始的“刘海”（notch）和某些安卓手机的非直角屏幕显示。如下图： 为什么这是一个需要解决的问题？ 因为当页面中存在停靠在四个方向边缘的元素时，如果不预先考虑安全区域，就会造成内容的遮挡，影响功能使用和美观。比如顶部固定的功能栏、侧边悬浮的按钮、底部导航条等。 解决思路： 1. 通过设置viewport-fit:cover(铺满） | contain（包含） &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, viewport-fit=cover\"&gt; 优点：简单直接，可满足可视和功能，保证不会被遮挡 缺点：无法保证美观度和一些细节，可能会造成不统一的背景颜色 2. 通过设置全局css，将根容器的pandding-x设置成对应的安全区域高度， padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left); 优点：简单，部分解决背景不统一问题 缺点：也无法保证美观和细节 3. 根据实际情况设置一组css，根据实际情况来处理 这里总结几种情况（只以top来举例）： 1. 固定(fixed)和绝对(absolute)定位的顶部元素（通知条、顶部功能栏、左上角的返回按钮） 处理方式：top: env(safe-area-inset-top) 但这里需要注意，如果元素后面还有元素，比如header下面的content区域，由于header的top修改，会遮挡content，还需要修改相应的padding-top。（比如增加css类：below-fixed-top{padding-top:env(safe-area-inset-top)} 另一种情况，如果元素本身有top或者padding-top的设置，就需要外套一个元素来处理。这里引出了一个经验，布局框架内的根元素、第一级元素最好不要有任何top/padding-top/margin-top的设置。 2. 全局容器（高度100%，全屏弹出页） 处理方式：padding-top:env(safe-area-inset-top) 3. 普通容器 处理方式：给父容器设置padding-top:env(safe-area-inset-top)，也可以通过增加伪元素(:before)来增加一个空的元素，这种方法可以设置显示内容。 不建议使用修改高度和margin的方式来处理，因为容器内通常还存在其他元素，可能会影响显示或布局，需要更多的适配。 特殊情况1: 比如在通常的fixed的左上角按钮，如果在其下部也有fixed的元素，则需要相应的下移。只能通过hardcode处理。",
            "content_html": "<p>首先什么是safe-area-inset-*？直接翻译是：安全区域内嵌上/下/左/右，意思是网页显示内容需要内嵌的方向和长度。「<a href=\"https://caniuse.com/?search=safe-area-inset\" target=\"_blank\" rel=\"noopener noreferrer\">caniuse和mdn介绍</a>」。比较常见的是iPhoneX开始的“刘海”（notch）和某些安卓手机的非直角屏幕显示。如下图：</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://photo.minwt.com/img/Content/webdesign/iphone-x-css/iphone-x-css-setting_03.jpg\" alt=\"\" data-is-external-image=\"true\"></figure>\n<p>为什么这是一个需要解决的问题？</p>\n<p>因为当页面中存在停靠在四个方向边缘的元素时，如果不预先考虑安全区域，就会造成内容的遮挡，影响功能使用和美观。比如顶部固定的功能栏、侧边悬浮的按钮、底部导航条等。</p>\n<p>解决思路：</p>\n<p>1. 通过设置viewport-fit:cover(铺满） | contain（包含）</p>\n<pre class=\" language-markup\"><code class=\" language-html language-markup\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0, viewport-fit=cover<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> </code></pre>\n<p>优点：简单直接，可满足可视和功能，保证不会被遮挡</p>\n<p>缺点：无法保证美观度和一些细节，可能会造成不统一的背景颜色</p>\n<p>2. 通过设置全局css，将根容器的pandding-x设置成对应的安全区域高度，</p>\n<pre class=\" language-css\"><code class=\" language-css\"><span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span>safe-area-inset-top<span class=\"token punctuation\">)</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span>safe-area-inset-right<span class=\"token punctuation\">)</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span>safe-area-inset-bottom<span class=\"token punctuation\">)</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span>safe-area-inset-left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>优点：简单，部分解决背景不统一问题</p>\n<p>缺点：也无法保证美观和细节</p>\n<p>3. 根据实际情况设置一组css，根据实际情况来处理</p>\n<p>这里总结几种情况（只以top来举例）：</p>\n<blockquote>\n<p>1. 固定(fixed)和绝对(absolute)定位的顶部元素（通知条、顶部功能栏、左上角的返回按钮）</p>\n<p>处理方式：top: env(safe-area-inset-top)</p>\n<p>但这里需要注意，如果元素后面还有元素，比如header下面的content区域，由于header的top修改，会遮挡content，还需要修改相应的padding-top。（比如增加css类：below-fixed-top{padding-top:env(safe-area-inset-top)}</p>\n<p>另一种情况，如果元素本身有top或者padding-top的设置，就需要外套一个元素来处理。这里引出了一个经验，布局框架内的根元素、第一级元素最好不要有任何top/padding-top/margin-top的设置。</p>\n<p>2. 全局容器（高度100%，全屏弹出页）</p>\n<p>处理方式：padding-top:env(safe-area-inset-top)</p>\n<p>3. 普通容器</p>\n<p>处理方式：给父容器设置padding-top:env(safe-area-inset-top)，也可以通过增加伪元素(:before)来增加一个空的元素，这种方法可以设置显示内容。</p>\n</blockquote>\n<p>不建议使用修改高度和margin的方式来处理，因为容器内通常还存在其他元素，可能会影响显示或布局，需要更多的适配。</p>\n<p>特殊情况1:<br>比如在通常的fixed的左上角按钮，如果在其下部也有fixed的元素，则需要相应的下移。只能通过hardcode处理。</p>",
            "author": {
                "name": "zhangv"
            },
            "tags": [
                   "技术"
            ],
            "date_published": "2023-01-23T01:43:38+08:00",
            "date_modified": "2023-02-06T13:04:34+08:00"
        }
    ]
}
